{
  "data": {
    "nodes": [
      {
        "id": "ChatInput-1",
        "type": "ChatInput",
        "position": {
          "x": 100,
          "y": 200
        },
        "data": {
          "type": "ChatInput",
          "node": {
            "template": {
              "input_value": {
                "dynamic": true,
                "required": true,
                "placeholder": "Ask anything - I'll route to the best AI model automatically!",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "input_value",
                "display_name": "Chat Input",
                "type": "str",
                "info": "Type your question - will be automatically routed to best model",
                "list": false
              }
            },
            "description": "Smart chat input with automatic model routing.",
            "base_classes": [
              "Message"
            ],
            "display_name": "Smart Chat Input",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "Message"
            ]
          }
        }
      },
      {
        "id": "ConditionalRouter-1",
        "type": "ConditionalRouter",
        "position": {
          "x": 400,
          "y": 200
        },
        "data": {
          "type": "ConditionalRouter",
          "node": {
            "template": {
              "input_text": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "input_text",
                "display_name": "Input Text",
                "type": "str",
                "info": "Text to analyze for model routing",
                "list": false
              },
              "routing_logic": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "# Simple model routing logic\nif any(word in input_text.lower() for word in ['code', 'programming', 'python', 'javascript']):\n    return 'claude'  # Claude for coding\nelif any(word in input_text.lower() for word in ['creative', 'story', 'poem', 'writing']):\n    return 'gpt'  # GPT for creative tasks  \nelif any(word in input_text.lower() for word in ['search', 'current', 'recent', 'google']):\n    return 'gemini'  # Gemini for search-like queries\nelse:\n    return 'gpt'  # Default to GPT",
                "password": false,
                "name": "routing_logic",
                "display_name": "Routing Logic",
                "type": "code",
                "info": "Python code to determine model selection",
                "list": false
              }
            },
            "description": "Routes input to appropriate model based on content analysis.",
            "base_classes": [
              "str"
            ],
            "display_name": "Conditional Router",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "str"
            ]
          }
        }
      },
      {
        "id": "GoogleAI-Multi-Gemini-1",
        "type": "GoogleAI",
        "position": {
          "x": 600,
          "y": 100
        },
        "data": {
          "type": "GoogleAI",
          "node": {
            "template": {
              "google_api_key": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "",
                "password": true,
                "name": "google_api_key",
                "display_name": "Google Gemini API Key",
                "type": "str",
                "info": "Enter your Google Gemini API key",
                "list": false
              },
              "model": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "gemini-2.5-flash",
                "password": false,
                "name": "model",
                "display_name": "Model",
                "type": "str",
                "info": "Google Gemini model to use",
                "list": false
              },
              "temperature": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": 0.7,
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "type": "float",
                "info": "Controls randomness in responses",
                "list": false
              },
              "input_value": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "input_value",
                "display_name": "Input",
                "type": "str",
                "info": "",
                "list": false
              },
              "active_condition": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "model_selection == 'gemini'",
                "password": false,
                "name": "active_condition",
                "display_name": "Activation Condition",
                "type": "str",
                "info": "Condition to activate Google Gemini",
                "list": false
              }
            },
            "description": "Google Gemini node with conditional activation.",
            "base_classes": [
              "BaseLanguageModel",
              "LanguageModel"
            ],
            "display_name": "Google Gemini (Multi)",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "Message"
            ]
          }
        }
      },
      {
        "id": "OpenAI-Multi-Gpt-1",
        "type": "OpenAI",
        "position": {
          "x": 600,
          "y": 200
        },
        "data": {
          "type": "OpenAI",
          "node": {
            "template": {
              "openai_api_key": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "",
                "password": true,
                "name": "openai_api_key",
                "display_name": "OpenAI GPT API Key",
                "type": "str",
                "info": "Enter your OpenAI GPT API key",
                "list": false
              },
              "model": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "gpt-4o",
                "password": false,
                "name": "model",
                "display_name": "Model",
                "type": "str",
                "info": "OpenAI GPT model to use",
                "list": false
              },
              "temperature": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": 0.7,
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "type": "float",
                "info": "Controls randomness in responses",
                "list": false
              },
              "input_value": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "input_value",
                "display_name": "Input",
                "type": "str",
                "info": "",
                "list": false
              },
              "active_condition": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "model_selection == 'gpt'",
                "password": false,
                "name": "active_condition",
                "display_name": "Activation Condition",
                "type": "str",
                "info": "Condition to activate OpenAI GPT",
                "list": false
              }
            },
            "description": "OpenAI GPT node with conditional activation.",
            "base_classes": [
              "BaseLanguageModel",
              "LanguageModel"
            ],
            "display_name": "OpenAI GPT (Multi)",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "Message"
            ]
          }
        }
      },
      {
        "id": "Anthropic-Multi-Claude-1",
        "type": "Anthropic",
        "position": {
          "x": 600,
          "y": 300
        },
        "data": {
          "type": "Anthropic",
          "node": {
            "template": {
              "anthropic_api_key": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "",
                "password": true,
                "name": "anthropic_api_key",
                "display_name": "Anthropic Claude API Key",
                "type": "str",
                "info": "Enter your Anthropic Claude API key",
                "list": false
              },
              "model": {
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "claude-3-5-sonnet-20241022",
                "password": false,
                "name": "model",
                "display_name": "Model",
                "type": "str",
                "info": "Anthropic Claude model to use",
                "list": false
              },
              "temperature": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": 0.7,
                "password": false,
                "name": "temperature",
                "display_name": "Temperature",
                "type": "float",
                "info": "Controls randomness in responses",
                "list": false
              },
              "input_value": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "input_value",
                "display_name": "Input",
                "type": "str",
                "info": "",
                "list": false
              },
              "active_condition": {
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": false,
                "value": "model_selection == 'claude'",
                "password": false,
                "name": "active_condition",
                "display_name": "Activation Condition",
                "type": "str",
                "info": "Condition to activate Anthropic Claude",
                "list": false
              }
            },
            "description": "Anthropic Claude node with conditional activation.",
            "base_classes": [
              "BaseLanguageModel",
              "LanguageModel"
            ],
            "display_name": "Anthropic Claude (Multi)",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "Message"
            ]
          }
        }
      },
      {
        "id": "OutputMerger-1",
        "type": "OutputMerger",
        "position": {
          "x": 900,
          "y": 200
        },
        "data": {
          "type": "OutputMerger",
          "node": {
            "template": {
              "gemini_output": {
                "dynamic": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "gemini_output",
                "display_name": "Gemini Output",
                "type": "str",
                "info": "Output from Gemini model",
                "list": false
              },
              "gpt_output": {
                "dynamic": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "gpt_output",
                "display_name": "GPT Output",
                "type": "str",
                "info": "Output from GPT model",
                "list": false
              },
              "claude_output": {
                "dynamic": true,
                "required": false,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "claude_output",
                "display_name": "Claude Output",
                "type": "str",
                "info": "Output from Claude model",
                "list": false
              }
            },
            "description": "Merges outputs from multiple models into single response.",
            "base_classes": [
              "Message"
            ],
            "display_name": "Output Merger",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "Message"
            ]
          }
        }
      },
      {
        "id": "ChatOutput-1",
        "type": "ChatOutput",
        "position": {
          "x": 1100,
          "y": 200
        },
        "data": {
          "type": "ChatOutput",
          "node": {
            "template": {
              "input_value": {
                "dynamic": true,
                "required": true,
                "placeholder": "",
                "show": true,
                "multiline": true,
                "value": "",
                "password": false,
                "name": "input_value",
                "display_name": "Smart Response",
                "type": "str",
                "info": "Response from automatically selected model",
                "list": false
              }
            },
            "description": "Output showing which model was selected and the response.",
            "base_classes": [
              "Message"
            ],
            "display_name": "Smart Chat Output",
            "documentation": "",
            "custom_fields": {},
            "output_types": [
              "Message"
            ]
          }
        }
      }
    ],
    "edges": [
      {
        "source": "ChatInput-1",
        "target": "ConditionalRouter-1",
        "data": {
          "connection": "input_to_router"
        },
        "id": "edge-input-router"
      },
      {
        "source": "ConditionalRouter-1",
        "target": "OutputMerger-1",
        "data": {
          "connection": "router_to_merger"
        },
        "id": "edge-router-merger"
      },
      {
        "source": "OutputMerger-1",
        "target": "ChatOutput-1",
        "data": {
          "connection": "merger_to_output"
        },
        "id": "edge-merger-output"
      }
    ]
  },
  "description": "Smart agentic workflow that automatically routes queries to the most suitable AI model based on content analysis. Coding questions → Claude, Creative tasks → GPT-4o, Search queries → Gemini.",
  "name": "Agentic Multi-Model Router",
  "last_tested_version": "1.0.0"
}