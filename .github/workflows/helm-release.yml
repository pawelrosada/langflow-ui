# GitHub Actions workflow for Helm chart releases
name: Helm Chart Release

on:
  push:
    branches: [main]
    paths:
      - 'helm/**'
      - '.github/workflows/helm-release.yml'
  workflow_dispatch:
    inputs:
      force_release:
        description: 'Force release even without helm changes'
        required: false
        default: 'false'
        type: boolean
  pull_request:
    paths:
      - 'helm/**'
      - '.github/workflows/helm-release.yml'

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "helm-release"
  cancel-in-progress: false

jobs:
  validate:
    name: Validate Helm Charts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .github/configs/ct.yaml --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "Charts changed: $changed"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
            echo "No charts changed"
          fi

      - name: Lint Helm Charts
        run: |
          echo "Running helm lint on all charts..."
          if [ -f "helm/Chart.yaml" ]; then
            echo "Linting chart: helm/"
            helm lint helm/
          fi
          for chart in helm/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              echo "Linting chart: $chart"
              helm lint "$chart"
            fi
          done

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'
        run: ct lint --config .github/configs/ct.yaml --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'
        uses: helm/kind-action@v1.8.0

      - name: Template test charts
        if: steps.list-changed.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          echo "Running helm template tests..."
          if [ -f "helm/Chart.yaml" ]; then
            echo "Testing template for chart: helm/"
            helm template test-release helm/ --dry-run
          fi
          for chart in helm/*/; do
            if [ -f "$chart/Chart.yaml" ]; then
              chart_name=$(basename "$chart")
              echo "Testing template for chart: $chart_name"
              helm template test-release "$chart" --dry-run
            fi
          done

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'
        run: ct install --config .github/configs/ct.yaml --target-branch ${{ github.event.repository.default_branch }}

  release:
    name: Release Helm Charts
    needs: validate
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 'v3.14.0'

      - name: Add helm repositories
        run: |
          helm repo add stable https://charts.helm.sh/stable
          helm repo update

      - name: Prepare chart structure for release
        run: |
          # Create charts directory structure expected by chart-releaser
          mkdir -p charts
          # Copy the helm chart to charts/langflow-app
          cp -r helm charts/langflow-app

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: charts
          config: .github/configs/cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Setup Pages
        if: success()
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        if: success()
        uses: actions/upload-pages-artifact@v3
        with:
          path: .cr-release-packages

      - name: Deploy to GitHub Pages
        if: success()
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    name: Notify Release Status
    needs: [validate, release]
    runs-on: ubuntu-latest
    if: always() && github.event_name != 'pull_request'
    steps:
      - name: Release Success
        if: needs.release.result == 'success'
        run: |
          echo "‚úÖ Helm chart release completed successfully!"
          echo "üì¶ Charts are now available at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo "üí° To add this repository: helm repo add langflow-ui https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"

      - name: Release Failure
        if: needs.release.result == 'failure'
        run: |
          echo "‚ùå Helm chart release failed!"
          echo "Please check the workflow logs for more details."
          exit 1

      - name: Validation Only
        if: github.event_name == 'pull_request'
        run: |
          echo "‚úÖ Helm chart validation completed for pull request"
          echo "Charts will be released when merged to main branch"
