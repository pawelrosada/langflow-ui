version: '3.8'

services:
  # Langflow Chat UI - Node.js Application
  langflow-chat-ui:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - LANGFLOW_API_URL=http://langflow:7860
      - LOG_LEVEL=info
    depends_on:
      - langflow
      - redis
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - langflow-network

  # Original Langflow Service
  langflow:
    image: langflowai/langflow:latest
    pull_policy: always
    ports:
      - "7860:7860"
    depends_on:
      - postgres
    environment:
      - LANGFLOW_DATABASE_URL=postgresql://langflow:langflow@postgres:5432/langflow
      - LANGFLOW_CONFIG_DIR=app/langflow
    volumes:
      - langflow-data:/app/langflow
    restart: unless-stopped
    networks:
      - langflow-network

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: langflow
      POSTGRES_PASSWORD: langflow
      POSTGRES_DB: langflow
    ports:
      - "5432:5432"
    volumes:
      - langflow-postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - langflow-network

  # Redis for caching and session management
  redis:
    image: redis:7.2-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - langflow-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - langflow-chat-ui
      - langflow
    restart: unless-stopped
    networks:
      - langflow-network

volumes:
  langflow-postgres:
    driver: local
  langflow-data:
    driver: local
  redis-data:
    driver: local

networks:
  langflow-network:
    driver: bridge
