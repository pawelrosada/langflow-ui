{{- if .Values.mcp.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "langflow-app.fullname" . }}-mcp
  labels:
    {{- include "langflow-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: mcp-server
spec:
  replicas: {{ .Values.mcp.replicas }}
  selector:
    matchLabels:
      {{- include "langflow-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mcp-server
  template:
    metadata:
      labels:
        {{- include "langflow-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mcp-server
    spec:
      containers:
        - name: mcp-server
          image: "{{ .Values.mcp.image.repository }}:{{ .Values.mcp.image.tag }}"
          imagePullPolicy: {{ .Values.mcp.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9099
              protocol: TCP
          env:
            - name: PIPELINES_API_KEY
              value: "mcp-server-key"
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          resources:
            {{- toYaml .Values.mcp.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "langflow-app.fullname" . }}-mcp
  labels:
    {{- include "langflow-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: mcp-server
spec:
  type: {{ .Values.mcp.service.type }}
  ports:
    - port: {{ .Values.mcp.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "langflow-app.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: mcp-server
{{- end }}