apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "langflow-app.fullname" . }}
  labels:
    {{- include "langflow-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "langflow-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "langflow-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "langflow-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 7860
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          env:
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_PASSWORD
              {{- if .Values.secrets.create }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "langflow-app.fullname" . }}-secrets
                  key: postgresql-password
              {{- else if .Values.postgresql.auth.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingSecret }}
                  key: {{ .Values.postgresql.auth.secretKeys.userPasswordKey }}
              {{- else }}
              value: {{ .Values.postgresql.auth.password }}
              {{- end }}
            - name: LANGFLOW_DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:$(POSTGRES_PASSWORD)@{{ include "langflow-app.fullname" . }}-postgresql:5432/{{ .Values.postgresql.auth.database }}"
            {{- end }}
            - name: LANGFLOW_CONFIG_DIR
              value: {{ .Values.config.langflowConfigDir }}
            - name: LANGFLOW_AUTO_LOGIN
              value: {{ .Values.config.langflowAutoLogin | quote }}
            - name: LANGFLOW_SUPERUSER
              value: {{ .Values.config.langflowSuperuser }}
            - name: LANGFLOW_SUPERUSER_PASSWORD
              {{- if .Values.secrets.create }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "langflow-app.fullname" . }}-secrets
                  key: langflow-superuser-password
              {{- else }}
              value: {{ .Values.config.langflowSuperuserPassword }}
              {{- end }}
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: langflow-data
              mountPath: /app/langflow
      volumes:
        - name: langflow-data
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
